@startuml

node "PublicServer" {
    package "JavaScript" {
        [wss.js]
        [http.js]
    }

    package "Api Bridge" {
        ()HTTP
        ()WebSocket
    }
}

:Client: -> [wss.js]
:Client: -> [http.js]

[wss.js] -> WebSocket:wss
[http.js] -> HTTP :ajax



package "Core" {
    [authorization] - Router
    ()Router - [ActivityLogger]
    Router ----> [dataExchange]
    [dataExchange] -->  ()Translation
    ()Translation --> Router
    Router -- [EventPusher]
    ()Translation

}


i18n - Translation

package "i18n" {
   [package]
   [CoreTranslation]
}

WebSocket - Router
HTTP - Router

package "Modules" {
    [ModulesProvider]
    Request - Users
}

package "Users" {
     [data]
     [privileges]

 }



Git ->  ModulesProvider

package "Git" {
    [Repositories]
    [Commits]
    [Branches]
}
Issues ->  ModulesProvider
package "Issues" {
    [Issue]
    [Milestone]
    ()Filter
    ()Label
}

Bash ->  ModulesProvider
package "Bash" {
    [Executer]
}

dataExchange -> Request
Request -> ModulesProvider
ModulesProvider -> dataExchange

    note top of wss.js
        <script src="//server/wss.js">
        script with api for
        web socket access
        to the data, session
    end note

    note top of http.js
        <script src="//server/http.js">
        script with api for http access
        to the data, session
    end note


@enduml