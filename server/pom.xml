<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>z0.shaman</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>server</artifactId>
    <packaging>war</packaging>
    <name>Shaman Server</name>
    <url>http://maven.apache.org</url>

    <properties>
        <serverDir>${basedir}</serverDir>
    </properties>
    <repositories>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
        </repository>
    </repositories>

    <dependencies>
        <!--JAX-RS-->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.wink</groupId>
            <artifactId>wink-server</artifactId>
            <version>1.2.0-incubating</version>
        </dependency>
        <!--TODO TESST NOSQL DATABASE-->
    <!--<dependencies>-->
        <!--<dependency>-->
            <!--<groupId>org.neo4j</groupId>-->
            <!--<artifactId>neo4j</artifactId>-->
            <!--<version>1.8.1</version>-->
        <!--</dependency>-->

        <!--Hibernate-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.1.9.Final</version>
        </dependency>

        <!-- Hibernate uses jboss-logging for logging, for the tutorials we will use the sl4fj-simple backend -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.6.1</version>
        </dependency>

        <!-- The tutorials use JUnit test cases to illustrate usage -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
        </dependency>

        <!-- The tutorials use the H2 in-memory database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.2.145</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <finalName>server</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>false</filtering>
                <directory>src/test/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jettyVersion}</version>
                <configuration>
                    <contextHandlers>
                        <contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext">
                            <contextPath>/js/lib</contextPath>
                            <resourceBase>${project.parent.basedir}/src/main/javascript/libraries</resourceBase>
                        </contextHandler>
                        <contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext">
                            <contextPath>/js</contextPath>
                            <resourceBase>${basedir}/target/javascript</resourceBase>
                        </contextHandler>
                    </contextHandlers>
                </configuration>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>com.github.iron9light</groupId>-->
                <!--<artifactId>coffeescript-maven-plugin</artifactId>-->
                <!--<version>1.1.2</version>-->
                <!--<configuration>-->
                    <!--<srcDir>${basedir}/src/main/javascript</srcDir>-->
                    <!--<outputDir>${basedir}/target/javascript</outputDir>-->
                    <!--<bare>false</bare>-->
                    <!--<modifiedOnly>false</modifiedOnly>-->
                    <!--<allowedDelete>true</allowedDelete>-->
                    <!--<compilerUrl>${project.parent.basedir}/src/main/javascript/libraries/coffee-script.js</compilerUrl>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>coffeescript</id>-->
                        <!--<phase>generate-resources</phase>-->
                        <!--<goals>-->
                            <!--<goal>compile</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        </plugins>
    </build>

</project>
